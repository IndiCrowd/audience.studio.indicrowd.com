<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="100" height="100" minWidth="100" minHeight="100" horizontalAlign="center"
				initialize="init()" layout="absolute">
	<fx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.media.*;
			
			[Bindable]
			private var serverInfoURL:String = "/server/streaming/optimal.json";
			private var urlPrefix:String = "/IndiCrowd";
			[Bindable]
			private var clientStreamURL:String;
			[Bindable]
			private var clientStreamStr:String = "-1";
			[Bindable]
			private var clientDefaultImage:String;
			
			private var videoEventsDisabled:Boolean = false;
			
			public function setClientStreamStr(css:String):void
			{
				this.clientStreamStr = css;
			}
			
			public function setClientDefaultImage(img:String):void
			{
				this.clientDefaultImage = img;
			}
			
			private function resetVideo():void
			{
				this.videoEventsDisabled = true;
				var videoSource:DynamicStreamingVideoSource = this.userVideo.source as DynamicStreamingVideoSource;
				
				this.userVideo.stop();
				this.userDefaultImage.visible = true;
				
				setTimeout(resetVideoSource, 1000, videoSource);
			}
			
			private function resetVideoSource(videoSource:DynamicStreamingVideoSource):void
			{
				this.videoEventsDisabled = false;
				this.userVideo.source = videoSource;
			}
			
			public function init():void
			{
				// 콜백 함수 등록  
				
				clientStreamStr = FlexGlobals.topLevelApplication.parameters.clientStreamStr;
				clientDefaultImage = FlexGlobals.topLevelApplication.parameters.clientDefaultImage;
				urlPrefix =  FlexGlobals.topLevelApplication.parameters.urlPrefix;
				serverInfoURL = urlPrefix + serverInfoURL;
				
				userDefaultImage.source = clientDefaultImage;
				
				flash.external.ExternalInterface.addCallback("setClientStreamStr", setClientStreamStr);
				flash.external.ExternalInterface.addCallback("setClientDefaultImage", setClientDefaultImage);
				
				serverInfoService.send();
			}
			
			protected function userVideo_mediaPlayerStateChangeHandler(event:MediaPlayerStateChangeEvent):void
			{	
				if (event.state == MediaPlayerState.PLAYING)
				{
					this.userDefaultImage.visible = false;
				}
				
				if (this.videoEventsDisabled)
					return ;
				
				
				//something went wrong
				if (event.state ==  MediaPlayerState.PLAYBACK_ERROR)
				{
					resetVideo();
				}
			}
			
			
			private function readServerInfo(event:ResultEvent):void
			{				
				var result:Object = JSON.parse(event.result as String);
				
				clientStreamURL = "rtmp://" + result.command.hostname + ":" + result.command.rtmpPort + "/live_user";
				
				userVideo.source = videoSource;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->	
		<mx:HTTPService id="serverInfoService" url="{serverInfoURL}" useProxy="false" method="GET" result="readServerInfo(event)" showBusyCursor="true">
			<mx:request xmlns="">
			</mx:request>
		</mx:HTTPService>
	</fx:Declarations>
	<s:VideoDisplay id="userVideo" x="0" y="0" width="100" height="100" autoPlay="true" mediaPlayerStateChange="userVideo_mediaPlayerStateChangeHandler(event)">
		<s:source>
			<s:DynamicStreamingVideoSource id="videoSource"
										   host="{clientStreamURL}" streamType="live" >
				<s:DynamicStreamingVideoItem streamName="{clientStreamStr}" />
			</s:DynamicStreamingVideoSource>
		</s:source>	
	</s:VideoDisplay>
	<s:Image id="userDefaultImage" x="0" y="0" width="100" height="100"/>
</mx:Application>
